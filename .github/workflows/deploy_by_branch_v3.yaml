# Publish versioned Storybook builds by deploying to subfolders in gh-pages branch.
name: Deploy by branch v3

on:
  push:
    branches:
      - "*"

jobs:
  publish_storybook:
    name: Build and deploy Storybook
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      deployments: write
      pull-requests: write
    steps:
      - name: Create deployment
        uses: octokit/request-action@v2.1.7
        id: create-deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: POST /repos/${{ github.repository }}/deployments
          ref: ${{ github.ref_name }}
          environment: docs-${{ github.ref_name }}
          required_contexts: "[]"
          auto_merge: false
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
        working-directory: ngx-fudis
      - name: Build
        run: npm run build-storybook -- -o static
        working-directory: ngx-fudis
      - name: Deploy to Pages under branch name
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ngx-fudis/static
          destination_dir: ${{ github.ref_name }}
      # Optional deploy to 'latest'.
      # - name: Deploy to Pages under "latest" (optional)
      #   if: inputs.latest
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ngx-fudis/static
      #     destination_dir: latest
      - name: Format deployment URL
        id: url
        env:
          REPO: ${{ github.repository }}
        run: echo "url=https://${{ github.repository_owner }}.github.io/${REPO##*/}/${{ github.ref_name }}" >> $GITHUB_OUTPUT
      - name: Complete deployment
        uses: octokit/request-action@v2.1.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: POST /repos/${{ github.repository }}/deployments/{deployment_id}/statuses
          deployment_id: ${{ fromJson(steps.create-deployment.outputs.data).id }}
          ref: ${{ github.ref_name }}
          environment: docs-${{ github.ref_name }}
          state: success
          environment_url: ${{ steps.url.outputs.url }}
